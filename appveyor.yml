disable by syntax error

version: 1.0.{build}
branches:
  only:
  - master
  - RC_1_1
  - RC_1_0
os: Visual Studio 2015
clone_depth: 1
environment:
  matrix:
  - variant: test_debug
    compiler: msvc-14.0
    model: 64
    sim: 1
    python: 1
    linkflags: '"/LIBPATH:C:\\openssl-1.0.1p-vs2015\\lib64"'
    include: '"c:\\openssl-1.0.1p-vs2015\\include"'
  - variant: test_debug
    compiler: msvc-14.0
    model: 32
    linkflags: '"/LIBPATH:C:\\openssl-1.0.1p-vs2015\\lib"'
    include: '"c:\\openssl-1.0.1p-vs2015\\include"'
  - variant: test_release
    compiler: msvc-14.0
    model: 64
    python: 1
    linkflags: '"/LIBPATH:C:\\openssl-1.0.1p-vs2015\\lib64"'
    include: '"c:\\openssl-1.0.1p-vs2015\\include"'
  - variant: test_debug
    compiler: gcc
    model: 64
    linkflags: '"-LC:\\OpenSSL-Win64\\lib64"'
    include: '"c:\\OpenSSL-Win64\\include"'

install:
- if defined sim ( git submodule update --init --recursive )
- set ROOT_DIRECTORY=%CD%
- cd %ROOT_DIRECTORY%
- if %compiler% == msvc-14.0 (
    if not exist openssl-1.0.1p-vs2015.7z (
      echo downloading openssl-2015
      & appveyor DownloadFile "http://www.npcglib.org/~stathis/downloads/openssl-1.0.1p-vs2015.7z"
    )
  )
- if %compiler% == msvc-14.0 (
    echo extracting openssl-2015
    & 7z x -oc:\ -aoa openssl-1.0.1p-vs2015.7z > nul
    & copy c:\openssl-1.0.1p-vs2015\lib64\ssleay32MT.lib c:\openssl-1.0.1p-vs2015\lib64\ssleay32.lib
    & copy c:\openssl-1.0.1p-vs2015\lib64\libeay32MT.lib c:\openssl-1.0.1p-vs2015\lib64\libeay32.lib
    & copy c:\openssl-1.0.1p-vs2015\lib\ssleay32MT.lib c:\openssl-1.0.1p-vs2015\lib\ssleay32.lib
    & copy c:\openssl-1.0.1p-vs2015\lib\libeay32MT.lib c:\openssl-1.0.1p-vs2015\lib\libeay32.lib
  )
- cd %ROOT_DIRECTORY%
- set BOOST_ROOT=c:\Libraries\boost_1_59_0
- set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
- echo %BOOST_ROOT%
- echo %BOOST_BUILD_PATH%
- set PATH=%PATH%;%BOOST_BUILD_PATH%\src\engine\bin.ntx86
- ps: '"using msvc : 14.0 ;`nusing gcc : : : <cxxflags>-std=c++11 ;`nusing python : 3.5 : c:\\Python35-x64 : c:\\Python35-x64\\include : c:\\Python35-x64\\libs ;`n" | Set-Content $env:HOMEDRIVE\$env:HOMEPATH\user-config.jam'
- type %HOMEDRIVE%%HOMEPATH%\user-config.jam
- cd %ROOT_DIRECTORY%
- set PATH=c:\msys64\mingw64\bin;%PATH%
- g++ --version
- python --version
- echo %ROOT_DIRECTORY%
- cd %BOOST_BUILD_PATH%\src\engine
- build.bat >nul
- cd %ROOT_DIRECTORY%

cache:
- openssl-1.0.1p-vs2015.7z

build_script:
# examples
- cd %ROOT_DIRECTORY%\examples
- b2.exe --hash warnings-as-errors=on -j2 %compiler% address-model=%model% variant=%variant% picker-debugging=on linkflags=%linkflags% include=%include% link=shared

# test
- cd %ROOT_DIRECTORY%\test
- b2.exe --hash -j2 warnings-as-errors=on address-model=%model% win-tests %compiler% variant=%variant% picker-debugging=on link=shared linkflags=%linkflags% include=%include% testing.execute=off

# python binding
- cd %ROOT_DIRECTORY%\bindings\python
# we use 64 bit python builds
- if defined python ( b2.exe --hash -j2 %compiler% address-model=%model% stage_module install-dependencies=on variant=%variant% picker-debugging=on libtorrent-link=shared linkflags=%linkflags% include=%include% )

# simulations
- if defined sim (
  cd %ROOT_DIRECTORY%\simulation
  & b2.exe --hash -j2 link=shared crypto=built-in %compiler% address-model=%model% testing.execute=off
  )

test_script:
- cd %ROOT_DIRECTORY%\test
# mingw tests crash currently. needs resolving
- if not %compiler% == gcc ( b2.exe --hash -j2 address-model=%model% win-tests %compiler% variant=%variant% picker-debugging=on link=shared linkflags=%linkflags% include=%include% )
- cd %ROOT_DIRECTORY%\bindings\python
# we use 64 bit python build
- if defined python ( c:\Python35-x64\python.exe test.py )
- cd %ROOT_DIRECTORY%\simulation
- if defined sim ( b2.exe --hash -j2 link=shared crypto=built-in %compiler% address-model=%model% )

