import testing ;
import feature : feature ;

use-project /torrent : .. ;

exe test_natpmp : test_natpmp.cpp /torrent//torrent
	: <threading>multi <debug-iterators>on <invariant-checks>full ;

exe enum_if : enum_if.cpp /torrent//torrent
	: <threading>multi <debug-iterators>on <invariant-checks>full ;

explicit test_natpmp ;
explicit enum_if ;

ED25519_SOURCES =
	add_scalar
	fe
	ge
	key_exchange
	keypair
	sc
	seed
	sha512
	sign
	verify
	;

lib libtorrent_test
	: # sources
	setup_transfer.cpp
	dht_server.cpp
	peer_server.cpp
	../ed25519/src/$(ED25519_SOURCES).c

	: # requirements
	<library>/torrent//torrent/<link>shared/<boost-link>shared/<export-extra>on
	# this is used to determine whether
	# symbols are exported or imported
	<link>shared:<define>TORRENT_BUILDING_TEST_SHARED
	<link>shared:<define>ED25519_BUILD_DLL
	<include>../ed25519/src
	<target-os>windows:<library>advapi32

	: # default build
	<link>shared
;

lib advapi32 : : <name>Advapi32 ;

project
   : requirements
	<source>main.cpp
	<library>/torrent//torrent/<link>shared/<boost-link>shared/<export-extra>on
	<library>libtorrent_test/<link>shared
   : default-build
	<threading>multi
	<invariant-checks>full
	<debug-iterators>on
   ;

feature launcher : none valgrind : composite ;
feature.compose <launcher>valgrind : <testing.launcher>"valgrind --tool=memcheck -v --track-origins=yes --error-exitcode=1" ;

test-suite libtorrent : 	
	[ run test_file_storage.cpp ]
	[ run test_peer_priority.cpp ]
	[ run test_file.cpp ]
	[ run test_privacy.cpp ]
	[ run test_threads.cpp ]
	[ run test_rss.cpp ]
	[ run test_bandwidth_limiter.cpp ]
	[ run test_buffer.cpp ]
	[ run test_piece_picker.cpp ]
	[ run test_bencoding.cpp ]
	[ run test_fast_extension.cpp ]
	[ run test_primitives.cpp ]
	[ run test_http_parser.cpp ]
	[ run test_packet_buffer.cpp ]
	[ run test_string.cpp ]
	[ run test_magnet.cpp ]
	[ run test_xml.cpp ]
	[ run test_ip_filter.cpp ]
	[ run test_hasher.cpp ]
	[ run test_dht.cpp ]
	[ run test_storage.cpp ]
	[ run test_torrent_parse.cpp ]
	[ run test_session.cpp ]
	[ run test_upnp.cpp ]

	[ run test_ssl.cpp ]
	[ run test_tracker.cpp ]
	[ run test_checking.cpp ]
	[ run test_web_seed.cpp ]
	[ run test_bdecode_performance.cpp ]
	[ run test_pe_crypto.cpp ]

	[ run test_utp.cpp ]
	[ run test_auto_unchoke.cpp ]
	[ run test_http_connection.cpp ]
	[ run test_torrent.cpp ]
	[ run test_transfer.cpp ]
#	[ run test_entry.cpp ]
	[ run test_metadata_extension.cpp ]
	[ run test_trackers_extension.cpp ]
	[ run test_swarm.cpp ]
	[ run test_lsd.cpp ]
	[ run test_pex.cpp ]
	; 

