name: Android

on:
   push:
      branches: [ RC_2_0 master ]
   pull_request:

env:
  BOOST_DOT_VERSION: "1.75.0"
  BOOST_VERSION: "1_75_0"
  NDK_VERSION: "r21d"
  OPENSSL_VERSION: "1.1.1i"
  OPENSSL_NO_OPTS: "no-deprecated no-shared no-makedepend"

jobs:

   android_arm_build:
      name: Build Android Arm 32bits
      runs-on: ubuntu-20.04

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: true

      - name: install boost
        run: |
          wget -nv -O boost.tar.gz https://dl.bintray.com/boostorg/release/${BOOST_DOT_VERSION}/source/boost_${BOOST_VERSION}.tar.gz
          tar xzf boost.tar.gz
          mv boost_${BOOST_VERSION} boost
          cd boost
          ./bootstrap.sh
          cd ..

      - name: install ndk
        run: |
          wget -nv -O android-ndk.zip https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-x86_64.zip
          unzip -qq android-ndk.zip
          export NDK=${PWD}/android-ndk-${NDK_VERSION}
          ${NDK}/build/tools/make_standalone_toolchain.py --arch arm --api 28 --stl libc++ --install-dir android-toolchain
          sed -i 's/RANLIB = ranlib/RANLIB = "${PWD}\/android-toolchain\/bin\/arm-linux-androideabi-ranlib"/g' ${PWD}/boost/tools/build/src/tools/gcc.jam

      - name: install openssl
        run: |
          export ANDROID_TOOLCHAIN=${PWD}/android-toolchain
          export PATH=${ANDROID_TOOLCHAIN}/arm-linux-androideabi/bin:${PATH}
          export CC=${ANDROID_TOOLCHAIN}/bin/arm-linux-androideabi-clang
          wget -nv -O openssl.tar.gz https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
          tar xzf openssl.tar.gz
          cd openssl-${OPENSSL_VERSION}
          ./Configure linux-armv4 ${OPENSSL_NO_OPTS} -march=armv7-a -mfpu=neon -fPIC --prefix=${PWD}/../openssl
          make &> /dev/null
          make install_sw &> /dev/null
          cd ..

      - name: build library
        run: |
          export ANDROID_TOOLCHAIN=${PWD}/android-toolchain
          export PATH=${ANDROID_TOOLCHAIN}/arm-linux-androideabi/bin:${PATH}
          export BOOST_ROOT=${PWD}/boost
          export OPENSSL_ROOT=${PWD}/openssl
          export CXX=${ANDROID_TOOLCHAIN}/bin/arm-linux-androideabi-clang++
          export CC=${ANDROID_TOOLCHAIN}/bin/arm-linux-androideabi-clang
          echo "boost-build ${BOOST_ROOT}/tools/build/src ;" > boost-build.jam
          echo "using clang-linux : arm : ${ANDROID_TOOLCHAIN}/bin/arm-linux-androideabi-clang++
          <cxxflags>-fPIC
          <cxxflags>-march=armv7-a
          <cxxflags>-mfpu=neon
          <cxxflags>-DANDROID
          <cxxflags>-D__STDC_FORMAT_MACROS
          <cxxflags>-D_FILE_OFFSET_BITS=64 ;" >>~/user-config.jam;
          ${BOOST_ROOT}/b2 warnings-as-errors=on cxxstd=14 toolset=clang-linux-arm target-os=android link=static crypto=openssl openssl-include=${OPENSSL_ROOT}/include openssl-lib=${OPENSSL_ROOT}/lib
