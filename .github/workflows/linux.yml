name: Linux

on:
   push:
      branches: [ RC_1_2 RC_2_0 master ]
   pull_request:

jobs:

   build:
      name: build
      runs-on: ubuntu-20.04
      continue-on-error: true

      strategy:
         matrix:
            config: [ asio-debugging=on picker-debugging=on, extensions=off logging=off streaming=off super-seeding=off share-mode=off predictive-pieces=off dht=off alert-msg=off encryption=off mutable-torrents=off deprecated-functions=off, crypto=gcrypt, mmap-disk-io=off ]

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-dev libboost-system-dev
          echo "using gcc ;" >>~/user-config.jam

      - name: install gcrypt
        run: sudo apt install libgcrypt20-dev

      - name: build library
        run: |
          b2 ${{ matrix.config }} -j2 cxxstd=17

      - name: build examples
        run: |
          cd examples
          b2 ${{ matrix.config }} -j2

      - name: build tools
        run: |
          cd tools
          b2 ${{ matrix.config }} -j2 warnings-as-errors=on



   fuzzers:
      name: Fuzzers
      runs-on: ubuntu-20.04
      continue-on-error: true

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-dev libboost-system-dev
          echo "using clang : 9 : clang++-9 ;" >>~/user-config.jam

      - name: build fuzzers
        run: |
          cd fuzzers
          b2 clang -j2 cxxstd=17 warnings-as-errors=on



   check_headers:
      name: check headers
      runs-on: ubuntu-20.04

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-dev libboost-system-dev
          echo "using gcc ;" >>~/user-config.jam

      - name: compile header files individually
        run: |
          b2 -j2 check-headers cxxstd=17 warnings-as-errors=on



   clang_tidy:
      name: clang-tidy
      runs-on: ubuntu-20.04

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install clang-tidy
        run: sudo apt install clang-tidy

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-dev
          echo "using clang_tidy : : clang-tidy \"-checks=-clang-analyzer-core.*,-clang-analyzer-unix.*\" : <cxxflags>-std=c++14 <cxxflags>-I/usr/local/clang-7.0.0/include/c++/v1 <cxxflags>-stdlib=libc++ <linkflags>-stdlib=libc++ ;" >> ~/user-config.jam;

      - name: analyze
        run: |
          b2 -a -j2 clang_tidy



   test:
      name: Tests
      runs-on: ubuntu-20.04
      continue-on-error: true

      strategy:
         matrix:
            config: [ webtorrent=on crypto=openssl address-sanitizer=norecover undefined-sanitizer=norecover, toolset=clang address-sanitizer=norecover undefined-sanitizer=norecover, deprecated-functions=off ]

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-dev libboost-system-dev
          pip install websockets
          echo "using gcc ;" >>~/user-config.jam
          echo "using clang : 9 : clang++-9 ;" >>~/user-config.jam

      - name: build and run tests
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          retry_wait_seconds: 1
          max_attempts: 3
          command: (cd test; b2 ${{ matrix.config }} -j2 -l400 warnings-as-errors=on debug-iterators=on invariant-checks=full asserts=on)



   sim:
      name: Simulations
      runs-on: ubuntu-20.04

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-dev libboost-system-dev
          echo "using gcc ;" >>~/user-config.jam

      - name: build and run simulations
        run: |
          cd simulation
          b2 -j2 debug-iterators=on invariant-checks=full asserts=on picker-debugging=on



   python:
      name: Python bindings
      runs-on: ubuntu-20.04

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-python-dev libboost-dev libboost-system-dev
          echo "using gcc ;" >>~/user-config.jam
          echo "using python ;" >>~/user-config.jam

      - name: install python
        run: |
          sudo apt install python3

      - name: build python module
        run: |
          cd bindings/python
          b2 -j2 stage_module stage_dependencies
          b2 -j2 deprecated-functions=off

      - name: run python tests
        run: |
          cd bindings/python
          LD_LIBRARY_PATH=./dependencies python3 test.py

   dist:
      name: build dist
      runs-on: ubuntu-20.04

      steps:
      - name: checkout
        uses: actions/checkout@v2.3.3
        with:
           submodules: recursive

      - name: install boost
        run: |
          sudo apt install libboost-tools-dev libboost-python-dev libboost-dev libboost-system-dev
          sudo apt install python-docutils python-pygments python-pil gsfonts inkscape icoutils graphviz hunspell imagemagick
          python -m pip install aafigure
          echo "using gcc ;" >>~/user-config.jam

      - name: build tarball
        run: AAFIGURE=~/.local/bin/aafigure RST2HTML=rst2html make dist

      - uses: actions/upload-artifact@v2
        with:
          name: tarball
          path: libtorrent-rasterbar-*.tar.gz

      - name: test-tarball
        run: |
          tar xvzf libtorrent-rasterbar-*.tar.gz
          cd libtorrent-rasterbar-*/test
          b2 link=static -j2 cxxstd=17 testing.execute=off
